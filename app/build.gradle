plugins {
    id 'com.android.application'

    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'

}

android {
    namespace 'com.noon.team.mawso3a'
    compileSdk 33

    defaultConfig {
        applicationId "com.noon.team.mawso3a"
        minSdk 19
        targetSdk 33
        versionCode 13
        versionName "13.0"
        multiDexEnabled true
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        //++ for Android 10 (API 29)
        buildConfigField "boolean", "FEATURE_EXTERNAL_STORAGE_DIR", "false"
        //--
        //++ for Android 11 (API 30)
        buildConfigField "boolean", "FEATURE_WEBVIEW_ASSET_LOADER", "true"

        buildConfigField "String", "ASSET_BASE_DOMAIN", "\"assets.snc.com\""
        buildConfigField "String", "ASSET_PATH", "\"/assets/\""
        buildConfigField "String", "RES_PATH", "\"/res/\""
        buildConfigField "String", "INTERNAL_PATH", "\"/public/\""

        //--

        buildConfigField "boolean", "FEATURE_WEBVIEW_BRIDGE_PLUGIN", "true"


        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile file('../noon.jks')
            storePassword "1478963"
            keyAlias 'noon'
            keyPassword '1478963'

            v1SigningEnabled true
            v2SigningEnabled true
        }

    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            debuggable false
            // Enables code shrinking, obfuscation, and optimization for only
            // your project's release build type.
            minifyEnabled false

            // Includes the default ProGuard rules files that are packaged with
            // the Android Gradle plugin. To learn more, go to the section about
            // R8 configuration files.
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            zipAlignEnabled true

            // Enables resource shrinking, which is performed by the
            // Android Gradle plugin.
            shrinkResources false
            ndk {
                debugSymbolLevel 'SYMBOL_TABLE'
            }
        }
        debug {

        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }



    flavorDimensions "version"
    productFlavors {
        free {
            dimension "version"
            manifestPlaceholders = [ applicationLabel: "@string/app_name" ]
        }
    }
    sourceSets {
        main {
            res.srcDirs = ['src/main/res']
            assets.srcDirs = ['src/main/assets']
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    packagingOptions {
        jniLibs {
            keepDebugSymbols += ['armeabi.so', 'armeabi-v7a.so', 'arm64-v8a.so', 'mips.so', 'mips64.so', 'x86.so', 'x86_64.so']
        }
        resources {
            excludes += ['META-INF/DEPENDENCIES.txt', 'META-INF/DEPENDENCIES', 'META-INF/LICENSE', 'META-INF/LICENSE.txt', 'META-INF/MANIFEST.MF', 'META-INF/NOTICE', 'META-INF/NOTICE.txt', 'META-INF/ASL2.0']
        }
    }
    lint {
        abortOnError false
        checkReleaseBuilds false
    }

    bundle {
            storeArchive {
                enable = false
            }
    }



    namespace 'com.snc.sample.webview'


}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation fileTree(dir: '../xwalk_shared_library-23.53.589.4', include: ['*.aar', '*.jar'], exclude: [])
    implementation fileTree(dir: '../un7zip-debug-aar', include: ['*.aar', '*.jar'], exclude: [])
    //implementation 'com.hzy:un7zip:+'
    //implementation project(':un7zip')
    implementation project(':nativelib')
    implementation 'com.blankj:utilcode:1.30.7'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.getkeepsafe.relinker:relinker:1.4.5'
    implementation 'io.github.ParkSangGwon:tedpermission:3.3.0'
    implementation 'io.github.ParkSangGwon:tedpermission-normal:3.3.0'
    implementation 'androidx.webkit:webkit:1.6.1'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'org.apache.commons:commons-compress:1.23.0'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:31.0.0')

    // Add the dependencies for the Crashlytics and Analytics libraries
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-crashlytics:18.3.7'
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-messaging'



}

android.buildTypes.release.ndk.debugSymbolLevel = 'FULL'

android.applicationVariants.all { variant ->
    variant.outputs.all { output ->
        def flavor = variant.productFlavors[0]
        def newApkName = variant.applicationId
        newApkName += "_" + flavor.name
        newApkName += "_" + variant.buildType.name
        newApkName += "_v" + variant.versionName
        newApkName += "_r" + variant.versionCode
        newApkName += "_" + "${getDate()}" + ".apk"

        outputFileName = new File(newApkName)

        println ''
        println ''
        println 'Rename outputFile : ' + newApkName
        println ''
        println ''
    }
}

static def getDate() {
    return new Date().format('yyyyMMdd_HHmm')
}

android.applicationVariants.all { variant ->
    variant.assembleProvider.configure {
        doLast {
            println "\n\n"
            println "###########################################"
            println "#                                         #"
            println "#       ######    ##     #     ######     #"
            println "#      #          #  #   #    #           #"
            println "#      #######    #   #  #    #           #"
            println "#            #    #    # #    #           #"
            println "#      ######     #     ##     ######     #"
            println "#                                         #"
            println "#      Copyright (c) 2016 Aaron Jo.       #"
            println "#                                         #"
            println "#          mcharima5@gmail.com            #"
            println "#                                         #"
            println "###########################################"
            println "\n\n"

            variant.outputs.all { output ->
                println "============================================================"
                println "project id: $variant.applicationId"
                println "project version : $variant.versionName"
                println "project revision : $variant.versionCode"
                println "build name: ${variant.name}"
                println "build type: ${variant.buildType.name}"
                println "output dir : " + variant.packageApplicationProvider.get().outputDirectory
                println "output file : $output.outputFileName"
                println "============================================================"
                println "\n"
            }
        }
    }
}
